import*as o from"three";import{Vector3 as U}from"three";function m(r,e){return r.rotateX(e)}function D(r,e){return r.rotateY(e)}function y(r,e){return r.rotateZ(e)}function j(r,e){return r.translateX(e)}function T(r,e){return r.translateY(e)}function E(r,e){return r.translateZ(e)}var u=class{constructor(e={}){this.visited=new Set;this.options={showIds:e.showIds??!0,maxDepth:e.maxDepth??10,nodeLabel:e.nodeLabel??this.defaultNodeLabel.bind(this),showDependencyCount:e.showDependencyCount??!0}}defaultNodeLabel(e){let t=e.compute.toString();return t.includes("SphereGeometry")?"sphere":t.includes("BoxGeometry")?"box":t.includes("CylinderGeometry")?"cylinder":t.includes("MeshBasicMaterial")?"material":t.includes("THREE.Mesh")||t.includes("new THREE.Mesh")?"mesh":t.includes("translateXObj")?"translateX":t.includes("translateYObj")?"translateY":t.includes("translateZObj")?"translateZ":t.includes("rotateXObj")?"rotateX":t.includes("rotateYObj")?"rotateY":t.includes("rotateZObj")?"rotateZ":t.includes("currentScene.add")||t.includes("objectRegistry")?"render":t.includes("Graph.run")?"map":"node"}print(e,t=0){let n="  ".repeat(t),b=this.options.showIds?` (${e.id})`:"",N=this.options.showDependencyCount?` [deps: ${e.dependencies.length}]`:"",H=this.options.nodeLabel(e),s=`${n}${H}${b}${N}
`;if(t>=this.options.maxDepth)return s+`${n}  ...(max depth reached)
`;if(this.visited.has(e.id))return s+`${n}  ...(already visited)
`;this.visited.add(e.id);for(let d=0;d<e.dependencies.length;d++){let M=e.dependencies[d],f=d===e.dependencies.length-1?"\u2514\u2500 ":"\u251C\u2500 ";s+=`${n}${f}`,s+=this.print(M,t+1).slice(n.length+f.length)}return s}printForest(e){this.visited.clear();let t="";for(let n=0;n<e.length;n++)n>0&&(t+=`
`),t+=`Root ${n+1}:
`,t+=this.print(e[n]);return t}compact(e){let t=this.options.nodeLabel(e),n=e.dependencies.map(b=>this.compact(b)).join(", ");return n?`${t}(${n})`:t}};var v=0,A=()=>`node-${++v}`,a=(r,e=[])=>({id:A(),compute:r,dependencies:e}),g=r=>{let e=r.dependencies.map(t=>g(t));return r.compute(...e)},i=r=>e=>a(r,[e]),O=(r,e)=>a(r,e);var w=(r,e)=>new u(e).print(r),B=(r,e)=>new u(e).compact(r),c=class{};c.run=g,c.prettyPrint=w,c.compact=B;var l=null,p=new Map;function P(r){l=r}function S(){return p}function h(){l&&p.forEach(r=>{l.remove(r),r instanceof o.Mesh&&(r.geometry.dispose(),r.material instanceof o.Material&&r.material.dispose())}),p.clear(),console.log("Cleared all objects from scene and registry")}var C=(r=1,e=32,t=16)=>a(()=>new o.SphereGeometry(r,e,t)),V=(r=1,e=1,t=1)=>a(()=>new o.BoxGeometry(r,e,t)),L=(r=1,e=1,t=1)=>a(()=>new o.CylinderGeometry(r,e,t)),$=(r={})=>a(()=>{let e={color:65280,wireframe:!1};return new o.MeshBasicMaterial({...e,...r})}),W=(r,e)=>O((t,n)=>new o.Mesh(t,n),[r,e]),F=(r,e)=>i(t=>(j(t,e),t))(r),X=(r,e)=>i(t=>(T(t,e),t))(r),Y=(r,e)=>i(t=>(E(t,e),t))(r),Z=(r,e)=>i(t=>(m(t,e),t))(r),G=(r,e)=>i(t=>(D(t,e),t))(r),I=(r,e)=>i(t=>(y(t,e),t))(r),Q=(r,e)=>i(t=>{if(!l)return console.warn("No scene available for rendering"),t;let n=p.get(e);return n?(n.position.copy(t.position),n.rotation.copy(t.rotation),n.scale.copy(t.scale),n instanceof o.Mesh&&t instanceof o.Mesh&&(n.geometry.dispose(),n.geometry=t.geometry,n.material instanceof o.Material&&n.material.dispose(),n.material=t.material),console.log(`Updated existing object: ${e}`),n):(l.add(t),p.set(e,t),console.log(`Created new object: ${e}`),t)})(r),x={sphere:C,box:V,cylinder:L,material:$,mesh:W,translateX:F,translateY:X,translateZ:Y,rotateX:Z,rotateY:G,rotateZ:I,render:Q,clearAll:h,Graph:c,Math,console};function R(r){try{return new Function(...Object.keys(x),`return ${r}`)(...Object.values(x))}catch(e){return console.error("DSL parsing error:",e),null}}function k(r){try{let e=R(r);if(e&&typeof e=="object"&&"compute"in e){let t=c.run(e);return t instanceof o.Object3D?t:null}return e instanceof o.Object3D?e:null}catch(e){return console.error("DSL execution error:",e),null}}import*as le from"three";export{c as Graph,le as THREE,O as apply,h as clearAll,a as createNode,x as dslContext,k as executeDSL,S as getObjectRegistry,i as map,R as parseDSL,P as setScene};
